[{"E:\\ivtr-management-demo2\\src\\index.js":"1","E:\\ivtr-management-demo2\\src\\reportWebVitals.js":"2","E:\\ivtr-management-demo2\\src\\Main\\RouteComponents\\RouteContainer.jsx":"3","E:\\ivtr-management-demo2\\src\\Main\\RouteComponents\\components\\NavBar.jsx":"4","E:\\ivtr-management-demo2\\src\\Main\\RouteComponents\\components\\SideBar.jsx":"5","E:\\ivtr-management-demo2\\src\\Main\\RouteComponents\\components\\MainComponents.jsx":"6","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\LiveStream.jsx":"7","E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductRoute.jsx":"8","E:\\ivtr-management-demo2\\src\\Main\\Feature\\OrderComponents\\Order.jsx":"9","E:\\ivtr-management-demo2\\src\\Main\\Feature\\DashboardComponents\\Dashboard.jsx":"10","E:\\ivtr-management-demo2\\src\\Main\\Feature\\ReportComponents\\Report.jsx":"11","E:\\ivtr-management-demo2\\src\\Main\\Feature\\PromotionComponents\\Promotion.jsx":"12","E:\\ivtr-management-demo2\\src\\Main\\Feature\\ContactComponents\\Contact.jsx":"13","E:\\ivtr-management-demo2\\src\\Main\\Feature\\CampaignComponents\\Campaign.jsx":"14","E:\\ivtr-management-demo2\\src\\Main\\Feature\\SettingComponents\\Setting.jsx":"15","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\ProductLive\\ProductLive.jsx":"16","E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductListComponents\\ProductContainer.jsx":"17","E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductAddComponents\\ProductAdd.jsx":"18","E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductDetailComponents\\ProductDetail.jsx":"19","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\utils\\MockData.js":"20","E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductListComponents\\ProductTable.jsx":"21","E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductListComponents\\ProductOverview.jsx":"22","E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductDetailComponents\\ProductCard.jsx":"23","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\ProductLive\\components\\EnhancedTableHead\\EnhancedTableHead.jsx":"24","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\ProductLive\\components\\EnhancedTableToolbar\\EnhancedTableToolbar.jsx":"25","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\ProductLive\\components\\EnhancedTableBody\\EnhancedTableBody.jsx":"26","E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductDetailComponents\\ProductSaleHistory.jsx":"27","E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductDetailComponents\\SubProduct.jsx":"28","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\utils\\TableUtils.js":"29","E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductListComponents\\InputBox.jsx":"30","E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductListComponents\\AutocompleteBox.jsx":"31","E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductListComponents\\FilterBox.jsx":"32","E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductListComponents\\LoadingProgress.jsx":"33","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\ProductLive\\components\\EnhancedTableBody\\components\\DeleteDialog.jsx":"34","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\ProductLive\\components\\EnhancedTableBody\\components\\EditDialog.jsx":"35","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\MainLive\\MainLive.jsx":"36","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\MainLive\\components\\LiveTableHeader.jsx":"37","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\MainLive\\components\\LiveTableBody.jsx":"38","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\ProductLive\\components\\EnhancedTableToolbar\\components\\AddExistingProduct.jsx":"39","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\ProductLive\\components\\EnhancedTableToolbar\\components\\ExistingProductTable.jsx":"40","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\MainLive\\components\\LivePageTitle.jsx":"41","E:\\ivtr-management-demo2\\src\\Main\\Components\\BreadCrumbs.jsx":"42","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\utils\\FormatDate.js":"43","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\MainLive\\components\\LiveTableTitle.jsx":"44","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\CFLive\\CFPage.jsx":"45","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\CFLive\\TotalCustomer.jsx":"46"},{"size":532,"mtime":1610655940700,"results":"47","hashOfConfig":"48"},{"size":375,"mtime":1609178162164,"results":"49","hashOfConfig":"48"},{"size":2329,"mtime":1609178162163,"results":"50","hashOfConfig":"48"},{"size":1920,"mtime":1609178162163,"results":"51","hashOfConfig":"48"},{"size":3133,"mtime":1609178162164,"results":"52","hashOfConfig":"48"},{"size":2041,"mtime":1611570222482,"results":"53","hashOfConfig":"48"},{"size":2011,"mtime":1611570127755,"results":"54","hashOfConfig":"48"},{"size":583,"mtime":1609178162161,"results":"55","hashOfConfig":"48"},{"size":96,"mtime":1609178162157,"results":"56","hashOfConfig":"48"},{"size":104,"mtime":1609178162152,"results":"57","hashOfConfig":"48"},{"size":98,"mtime":1609178162162,"results":"58","hashOfConfig":"48"},{"size":104,"mtime":1609178162162,"results":"59","hashOfConfig":"48"},{"size":100,"mtime":1609178162152,"results":"60","hashOfConfig":"48"},{"size":102,"mtime":1609178162152,"results":"61","hashOfConfig":"48"},{"size":100,"mtime":1609178162162,"results":"62","hashOfConfig":"48"},{"size":5528,"mtime":1610991551257,"results":"63","hashOfConfig":"48"},{"size":770,"mtime":1609178162160,"results":"64","hashOfConfig":"48"},{"size":135,"mtime":1609178162157,"results":"65","hashOfConfig":"48"},{"size":1299,"mtime":1609178162158,"results":"66","hashOfConfig":"48"},{"size":23932,"mtime":1610050268128,"results":"67","hashOfConfig":"48"},{"size":19279,"mtime":1609178162161,"results":"68","hashOfConfig":"48"},{"size":858,"mtime":1609178162160,"results":"69","hashOfConfig":"48"},{"size":2811,"mtime":1609178162158,"results":"70","hashOfConfig":"48"},{"size":4061,"mtime":1609873610800,"results":"71","hashOfConfig":"48"},{"size":4407,"mtime":1611569965082,"results":"72","hashOfConfig":"48"},{"size":4232,"mtime":1610047974919,"results":"73","hashOfConfig":"48"},{"size":6451,"mtime":1609178162158,"results":"74","hashOfConfig":"48"},{"size":3422,"mtime":1609178162158,"results":"75","hashOfConfig":"48"},{"size":681,"mtime":1609178162156,"results":"76","hashOfConfig":"48"},{"size":395,"mtime":1609178162159,"results":"77","hashOfConfig":"48"},{"size":898,"mtime":1609178162159,"results":"78","hashOfConfig":"48"},{"size":1100,"mtime":1609178162159,"results":"79","hashOfConfig":"48"},{"size":481,"mtime":1609178162160,"results":"80","hashOfConfig":"48"},{"size":1871,"mtime":1609870917488,"results":"81","hashOfConfig":"48"},{"size":5121,"mtime":1609870869426,"results":"82","hashOfConfig":"48"},{"size":4116,"mtime":1610897690583,"results":"83","hashOfConfig":"48"},{"size":2695,"mtime":1610817664118,"results":"84","hashOfConfig":"48"},{"size":2458,"mtime":1610990159066,"results":"85","hashOfConfig":"48"},{"size":1942,"mtime":1610789276008,"results":"86","hashOfConfig":"48"},{"size":7742,"mtime":1610789387800,"results":"87","hashOfConfig":"48"},{"size":4510,"mtime":1610898156693,"results":"88","hashOfConfig":"48"},{"size":559,"mtime":1610789913193,"results":"89","hashOfConfig":"48"},{"size":509,"mtime":1610793698994,"results":"90","hashOfConfig":"48"},{"size":1434,"mtime":1610897714477,"results":"91","hashOfConfig":"48"},{"size":4628,"mtime":1611805428573,"results":"92","hashOfConfig":"48"},{"size":1898,"mtime":1611804871795,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"me5czh",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"96"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"96"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"E:\\ivtr-management-demo2\\src\\index.js",[],["196","197"],"E:\\ivtr-management-demo2\\src\\reportWebVitals.js",[],"E:\\ivtr-management-demo2\\src\\Main\\RouteComponents\\RouteContainer.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\RouteComponents\\components\\NavBar.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\RouteComponents\\components\\SideBar.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\RouteComponents\\components\\MainComponents.jsx",["198"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Product from \"../../Feature/ProductComponents/ProductRoute\";\r\nimport LiveStream from \"../../Feature/LiveStreamComponents/LiveStream\";\r\nimport CFpage from \"../../Feature/LiveStreamComponents/CFLive/CFPage\"\r\nimport Order from \"../../Feature/OrderComponents/Order\";\r\nimport Dashboard from \"../../Feature/DashboardComponents/Dashboard\";\r\nimport Report from \"../../Feature/ReportComponents/Report\";\r\nimport Promotion from \"../../Feature/PromotionComponents/Promotion\";\r\nimport Campaign from \"../../Feature/CampaignComponents/Campaign\";\r\nimport Contact from \"../../Feature/ContactComponents/Contact\";\r\nimport Setting from \"../../Feature/SettingComponents/Setting\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MainComponents({ selected }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <main className={classes.content}>\r\n      <div className={classes.toolbar} />\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Dashboard} />\r\n          <Route path=\"/dashboard\" exact component={Dashboard} />\r\n          <Route path=\"/product\" component={Product} />\r\n          <Route path=\"/order\" exact component={Order} />\r\n          {<Route path=\"/livestream\" component={/*LiveStream*/CFpage} />}\r\n          <Route path=\"/promotion\" exact component={Promotion} />\r\n          <Route path=\"/campaign\" component={Campaign} />\r\n          <Route path=\"/report\" exact component={Report} />\r\n          <Route path=\"/contact\" exact component={Contact} />\r\n          <Route path=\"/setting\" exact component={Setting} />\r\n        </Switch>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\LiveStream.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductRoute.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\OrderComponents\\Order.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\DashboardComponents\\Dashboard.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\ReportComponents\\Report.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\PromotionComponents\\Promotion.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\ContactComponents\\Contact.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\CampaignComponents\\Campaign.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\SettingComponents\\Setting.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\ProductLive\\ProductLive.jsx",["199"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Product } from \"../utils/MockData\";\r\nimport EnhancedTableHead from \"./components/EnhancedTableHead/EnhancedTableHead\";\r\nimport EnhancedTableToolbar from \"./components/EnhancedTableToolbar/EnhancedTableToolbar\";\r\nimport EnhancedTableBody from \"./components/EnhancedTableBody/EnhancedTableBody\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: \"hide\",\r\n  },\r\n  container: {\r\n    maxHeight: 460,\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 340,\r\n  },\r\n  tableCell: {\r\n    paddingRight: 4,\r\n    paddingLeft: 5,\r\n  },\r\n}));\r\n\r\nexport default function ProductLive() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"name\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, _] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [products, setProducts] = React.useState(new Product().liveProduct);\r\n\r\n  \r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const updateOneProduct = (event, row) => {\r\n    const newArr = [...products];\r\n    const index = newArr.map((x) => x.id).indexOf(row.id);\r\n    newArr[index] = row;\r\n    setProducts(newArr);\r\n  };\r\n\r\n  const handleRemoveProduct = (event, productId) => {\r\n    const newArr = products.filter((x) => x.id !== productId);\r\n    setProducts(newArr);\r\n  };\r\n\r\n  const handleRemoveWhenClickIcon = () => {\r\n    const newArr = products.filter((x) => !selected.includes(x.id));\r\n    setProducts(newArr);\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleEditProduct = (event, product) => {\r\n    const newArr = [...products];\r\n    const index = newArr.map((x) => x.id).indexOf(product.id);\r\n\r\n    Object.keys(product).forEach((x) => {\r\n      newArr[index][x] = product[x];\r\n    });\r\n\r\n    setProducts(newArr);\r\n  };\r\n\r\n  const handleActiveLiveAll = (event, status) => {\r\n    setProducts(products.map((x) => ({ ...x, live: status })));\r\n  };\r\n\r\n\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = products.map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <EnhancedTableToolbar\r\n        numSelected={selected.length}\r\n        date={new Date()}\r\n        onActiveLiveAll={handleActiveLiveAll}\r\n        handleRemoveWhenClickIcon={handleRemoveWhenClickIcon}\r\n      />\r\n      <TableContainer table className={classes.container} >\r\n        <Table\r\n          stickyHeader\r\n          className={classes.table}\r\n          aria-labelledby=\"tableTitle\"\r\n          size={dense ? \"small\" : \"medium\"}\r\n          aria-label=\"enhanced table\"\r\n          table-layout=\"fixed\"\r\n        >\r\n          <EnhancedTableHead\r\n            numSelected={selected.length}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onSelectAllClick={handleSelectAllClick}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={products.length}\r\n            classes={classes}\r\n          />\r\n          <tbody>\r\n            <EnhancedTableBody\r\n              rows={products}\r\n              handleClick={handleClick}\r\n              isSelected={isSelected}\r\n              updateOneProduct={updateOneProduct}\r\n              handleEditProduct={handleEditProduct}\r\n              handleRemoveProduct={handleRemoveProduct}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              page={page}\r\n              rowsPerPage={rowsPerPage}\r\n              classes={classes}\r\n            />\r\n          </tbody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        className={classes.stickyFooter}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={products.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductListComponents\\ProductContainer.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductAddComponents\\ProductAdd.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductDetailComponents\\ProductDetail.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\utils\\MockData.js",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductListComponents\\ProductTable.jsx",["200","201"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterBox from \"./FilterBox\";\r\nimport AutocompleteBox from \"./AutocompleteBox\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport InputBox from \"./InputBox\";\r\nimport LoadingProgress from \"./LoadingProgress\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"id\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"รหัสสินค้า\",\r\n  },\r\n  {\r\n    id: \"Name\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"ชื่อสินค้า\",\r\n  },\r\n  { id: \"Price\", numeric: false, disablePadding: false, label: \"ราคา\" },\r\n  { id: \"Stock\", numeric: false, disablePadding: false, label: \"คงเหลือ\" },\r\n  { id: \"Category\", numeric: false, disablePadding: false, label: \"ประเภท\" },\r\n  { id: \"Sold\", numeric: false, disablePadding: false, label: \"ขายแล้ว\" },\r\n];\r\n\r\nconst NumericHeader = [\"Price\", \"Stock\", \"Sold\"];\r\nconst NumericOptions = [\r\n  { id: \"<\", label: \"<\" },\r\n  { id: \">\", label: \">\" },\r\n  { id: \"=\", label: \"=\" },\r\n  { id: \"<>\", label: \"ระหว่าง\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\"></TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 50%\",\r\n  },\r\n}));\r\n\r\nconst NavLinkStyle = {\r\n  marginRight: \"2.5em\",\r\n  textDecoration: \"none\",\r\n};\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const {\r\n    numSelected,\r\n    onChangeFilter,\r\n    filterData,\r\n    onChangeSearchBar,\r\n    filterSelected,\r\n    clearText,\r\n    filterNumeric,\r\n    onSearchDataFromRange,\r\n  } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          <span>\r\n            <b>รายการสินค้า</b>\r\n          </span>\r\n          <React.Fragment>\r\n            <div style={{ display: \"inline-block\", paddingLeft: \"30px\" }}>\r\n              <div\r\n                style={{\r\n                  display: \"inline-block\",\r\n                  verticalAlign: \"top\",\r\n                }}\r\n              >\r\n                <FilterBox\r\n                  filterSelected={filterSelected}\r\n                  headCells={headCells}\r\n                  onChangeFilter={onChangeFilter}\r\n                  typeFilter=\"filterGroup\"\r\n                />\r\n              </div>\r\n              {NumericHeader.indexOf(filterSelected) !== -1 ? (\r\n                <div\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    verticalAlign: \"top\",\r\n                    paddingRight: \"5px\",\r\n                  }}\r\n                >\r\n                  <FilterBox\r\n                    headCells={NumericOptions}\r\n                    filterSelected={filterNumeric}\r\n                    onChangeFilter={onChangeFilter}\r\n                    InputWidth={20}\r\n                    typeFilter=\"numericGroup\"\r\n                  />\r\n                </div>\r\n              ) : (\r\n                false\r\n              )}\r\n\r\n              {filterNumeric === \"<>\" &&\r\n              NumericHeader.indexOf(filterSelected) !== -1 ? (\r\n                <React.Fragment>\r\n                  <div\r\n                    style={{\r\n                      display: \"inline-block\",\r\n                      marginTop: 11,\r\n                      marginLeft: 10,\r\n                    }}\r\n                  >\r\n                    <InputBox\r\n                      id=\"product_search_min_range\"\r\n                      name=\"min\"\r\n                      onSearchDataFromRange={onSearchDataFromRange}\r\n                    />\r\n                  </div>\r\n                  <span\r\n                    style={{\r\n                      margin: \"0px 10px\",\r\n                      color: \"#9c9c9c\",\r\n                      fontSize: \"16px\",\r\n                    }}\r\n                  >\r\n                    ถึง\r\n                  </span>\r\n                  <div style={{ display: \"inline-block\", marginTop: 11 }}>\r\n                    <InputBox\r\n                      id=\"product_search_max_range\"\r\n                      name=\"max\"\r\n                      onSearchDataFromRange={onSearchDataFromRange}\r\n                    />\r\n                  </div>\r\n                </React.Fragment>\r\n              ) : (\r\n                <div style={{ display: \"inline-block\", marginTop: 11 }}>\r\n                  <AutocompleteBox\r\n                    onChangeSearchBar={onChangeSearchBar}\r\n                    filterData={filterData}\r\n                    clearText={clearText}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </React.Fragment>\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <NavLink style={NavLinkStyle} to=\"/product/addproduct\">\r\n          <b>+</b> New Product\r\n        </NavLink>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable({ showProductDetail }) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [rows, setRows] = React.useState([]);\r\n  const [filter_selected, setSelectedFilter] = React.useState(headCells[0].id);\r\n  const [filter_numeric, setNumericSelect] = React.useState(\r\n    NumericOptions[0].id\r\n  );\r\n  const [filter_data, setFilterData] = React.useState([]);\r\n  const [full_data, setFullData] = React.useState([]);\r\n  const [clearText, setTextInput] = React.useState(null);\r\n  const [loadingData,setLoadingData] = React.useState(true);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const findDuplicate = (raw_data, filter_id) => {\r\n    var filter = [];\r\n    for (let i = 0; i < raw_data.length; i++) {\r\n      if (filter.indexOf(raw_data[i][filter_id]) === -1) {\r\n        filter.push(raw_data[i][filter_id]);\r\n      }\r\n    }\r\n    return filter;\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  function onChangeFilter(filter_id, type) {\r\n    switch (type) {\r\n      case \"filterGroup\":\r\n        const filter = findDuplicate(full_data, filter_id);\r\n        setFilterData(filter);\r\n        setSelectedFilter(filter_id);\r\n        break;\r\n      case \"numericGroup\":\r\n        setNumericSelect(filter_id);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setPage(0);\r\n    if (\r\n      filter_numeric === \"<>\" &&\r\n      NumericHeader.indexOf(filter_selected) !== -1\r\n    ) {\r\n      document.getElementById(\"product_search_min_range\").value = \"\";\r\n      document.getElementById(\"product_search_max_range\").value = \"\";\r\n    }\r\n    if (rows.length !== full_data.length) {\r\n      setRows([...full_data]);\r\n    }\r\n    setTextInput(clearText == null ? \"\" : null);\r\n  }\r\n\r\n  function searchData(keyword) {\r\n    let selectedData;\r\n    if (NumericHeader.indexOf(filter_selected) !== -1) {\r\n      switch (filter_numeric) {\r\n        case \">\":\r\n          selectedData = full_data.filter(\r\n            (data) => data[filter_selected] >= keyword\r\n          );\r\n          break;\r\n        case \"<\":\r\n          selectedData = full_data.filter(\r\n            (data) => data[filter_selected] <= keyword\r\n          );\r\n          break;\r\n        case \"=\":\r\n          selectedData = full_data.filter(\r\n            (data) => data[filter_selected] == keyword\r\n          );\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } else {\r\n      keyword = keyword + \"\";\r\n      let query = keyword.toLowerCase();\r\n      selectedData = full_data.filter(\r\n        (data) => (data[filter_selected] + \"\").toLowerCase().indexOf(query) >= 0\r\n      );\r\n    }\r\n    return selectedData;\r\n  }\r\n\r\n  function onChangeSearchBar(keyword, type) {\r\n    if (type === \"search\") {\r\n      const data = searchData(keyword);\r\n      setRows([...data]);\r\n    } else if (type === \"reset\") {\r\n      setRows([...full_data]);\r\n    }\r\n    setPage(0);\r\n  }\r\n\r\n  function onSearchDataFromRange(data) {\r\n    var min_value = document.getElementById(\"product_search_min_range\").value;\r\n    var max_value = document.getElementById(\"product_search_max_range\").value;\r\n\r\n    if (min_value.length !== 0 && max_value.length !== 0) {\r\n      let selectData = full_data.filter(\r\n        (data) =>\r\n          data[filter_selected] >= min_value &&\r\n          data[filter_selected] <= max_value\r\n      );\r\n      setRows([...selectData]);\r\n      setPage(0);\r\n    }\r\n  }\r\n\r\n  function fetchProductData() {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState === 4) {\r\n        const data = JSON.parse(xhr.responseText);\r\n        const filterData = findDuplicate(data, filter_selected);\r\n        setLoadingData(false);\r\n        setRows([...data]);\r\n        setFullData([...data]);\r\n        setFilterData(filterData);\r\n      }\r\n    };\r\n    xhr.open(\"GET\", \"https://ivtr-server.herokuapp.com/product/\");\r\n    xhr.send();\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    fetchProductData();\r\n  }, []);\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          onChangeFilter={onChangeFilter}\r\n          filterData={filter_data}\r\n          filterSelected={filter_selected}\r\n          onChangeSearchBar={onChangeSearchBar}\r\n          clearText={clearText}\r\n          filterNumeric={filter_numeric}\r\n          onSearchDataFromRange={onSearchDataFromRange}\r\n        />\r\n        {loadingData ? <LoadingProgress /> : false}\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                      onClick={() => {\r\n                        showProductDetail(row);\r\n                      }}\r\n                    >\r\n                      <TableCell\r\n                        padding=\"checkbox\"\r\n                        onClick={(event) => handleClick(event, row.id)}\r\n                      >\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.id}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <Tooltip title={row.Name}>\r\n                          <Typography>\r\n                            {row.Name.length > 20\r\n                              ? row.Name.slice(0, 20) + \"...\"\r\n                              : row.Name}\r\n                          </Typography>\r\n                        </Tooltip>\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{row.Price}</TableCell>\r\n                      <TableCell align=\"left\">{row.Stock}</TableCell>\r\n                      <TableCell align=\"left\">{row.Category}</TableCell>\r\n                      <TableCell align=\"left\">{row.Sold}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductListComponents\\ProductOverview.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductDetailComponents\\ProductCard.jsx",["202","203","204","205","206","207"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\r\n\r\n\r\n\r\nfunction FolderList({ label, name }) {\r\n\r\n  return (\r\n    <ListItem>\r\n      <ListItemAvatar>\r\n        <Avatar>\r\n          <ImageIcon />\r\n        </Avatar>\r\n      </ListItemAvatar>\r\n      <ListItemText primary={label} secondary={name} />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop:\"4px\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"70%\",\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: blue[500],\r\n  },\r\n}));\r\n\r\nexport default function RecipeReviewCard(props) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            H\r\n          </Avatar>\r\n        }\r\n        title={\"ข้อมูลของ \" + props.item}\r\n        subheader=\"อัพเดทล่าสุด :14/08/2016\"\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image=\"https://www.cmushop.com/assets/uploads/post/6dd71b83f21e173a26af6d62fd181a2b.jpg\"\r\n        title=\"Paella dish\"\r\n      />\r\n      {/* <Grid container spacing={4}>\r\n        <Grid item xs={3}>\r\n          <FolderList label=\"ราคา\" name=\"900\" />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <FolderList label=\"ประเภท\" name=\"รองเท้า\" />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}></Grid>\r\n      </Grid> */}\r\n      <CardContent></CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\ProductLive\\components\\EnhancedTableHead\\EnhancedTableHead.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\ProductLive\\components\\EnhancedTableToolbar\\EnhancedTableToolbar.jsx",["208"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { lighten } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddExistingProduct from \"./components/AddExistingProduct\";\r\n\r\n\r\nconst monthNames = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nconst formatDate = (date) => {\r\n  const hour = date.toLocaleString(\"en-US\", {\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    hour12: true,\r\n  });\r\n  const month = monthNames[date.getMonth()];\r\n  const day = date.getUTCDate();\r\n  const year = date.getUTCFullYear();\r\n  return `${month} ${day}, ${year} ${hour}`;\r\n};\r\n\r\nconst useToolbarDeleteStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst useToolbarStatStyles = makeStyles((theme) => ({\r\n  info: {\r\n    color: theme.palette.secondary.main,\r\n    fontSize: \".7em\",\r\n  },\r\n  infoTitle: {\r\n    fontSize: \"1em\",\r\n  },\r\n  notice_update: {\r\n    marginRight: \"10px\",\r\n  },\r\n  title: {},\r\n  spacer: {\r\n    flex: \"1 1 10%\",\r\n  },\r\n  section: {\r\n    color: \"red\",\r\n    fontSize: \".7em\",\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTableToolbar(props) {\r\n  const {\r\n    numSelected,\r\n    handleRemoveWhenClickIcon,\r\n  } = props;\r\n  const deleteClasses = useToolbarDeleteStyles();\r\n  const stateClasses = useToolbarStatStyles();\r\n\r\n  if (numSelected > 0) {\r\n    return (\r\n      <Toolbar\r\n        className={clsx(deleteClasses.root, {\r\n          [deleteClasses.highlight]: numSelected > 0,\r\n        })}\r\n      >\r\n        <Typography\r\n          className={deleteClasses.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\" onClick={handleRemoveWhenClickIcon}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Toolbar>\r\n    );\r\n  } else {\r\n    return (\r\n      <Toolbar variant=\"regular\">\r\n        <Typography variant=\"h5\" id=\"statistics\">\r\n          สินค้าไลฟ์\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          style={{ marginLeft: 10 }}\r\n          size=\"medium\"\r\n        >\r\n          <Typography variant=\"h6\" className={stateClasses.infoTitle}>\r\n            ทดลอง CF\r\n          </Typography>\r\n        </Button>\r\n        <AddExistingProduct />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          style={{ marginLeft: 10, marginRight: 20}}\r\n          size=\"medium\"\r\n        >\r\n          <Typography variant=\"h6\" className={stateClasses.infoTitle}>\r\n            พิมพ์\r\n          </Typography>\r\n        </Button>\r\n\r\n        {/*<ConfirmDialog\r\n          onActiveLiveAll={onActiveLiveAll}\r\n          displayText=\"เปิดใช้งาน CF ทั้งหมด\"\r\n          color=\"primary\"\r\n          status={true}\r\n        />\r\n        <ConfirmDialog\r\n          onActiveLiveAll={onActiveLiveAll}\r\n          displayText=\"ปิดใช้งาน CF ทั้งหมด\"\r\n          color=\"secondary\"\r\n          status={false}\r\n        /> \r\n\r\n        <div className={stateClasses.notice_update} style={{ marginLeft: 100 }}>\r\n          <Typography variant=\"h6\" className={stateClasses.info}>\r\n            Update on\r\n          </Typography>\r\n          <Typography variant=\"h6\" className={stateClasses.infoTitle}>\r\n            {formatDate(date)}\r\n          </Typography>\r\n        </div> */}\r\n      </Toolbar>\r\n    );\r\n  }\r\n}\r\n","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\ProductLive\\components\\EnhancedTableBody\\EnhancedTableBody.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductDetailComponents\\ProductSaleHistory.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductDetailComponents\\SubProduct.jsx",["209"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {},\r\n  header: {\r\n    padding: \"10px 5px\",\r\n  },\r\n  boxInline: {\r\n    display: \"inline-block\",\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n];\r\n\r\nexport default function BasicTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Paper className={classes.header}>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={8}>\r\n            <h3 className={classes.boxInline}>รายการสินค้าย่อย (SubProduct)</h3>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Button\r\n              className={classes.boxInline}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n            >\r\n              + เพิ่มสินค้าย่อย\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Button\r\n              className={classes.boxInline}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n            >\r\n              + เพิ่มสินค้าย่อย\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\">ชื่อ</TableCell>\r\n            <TableCell align=\"right\">ราคา&nbsp;(บาท)</TableCell>\r\n            <TableCell align=\"right\">จำนวนคงเหลือ&nbsp;(ชิ้น)</TableCell>\r\n            <TableCell align=\"right\">ขายแล้ว&nbsp;(ชิ้น)</TableCell>\r\n            <TableCell align=\"right\">\r\n              จำนวนสั่งซื้อทั้งหมด&nbsp;(ชิ้น)\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\utils\\TableUtils.js",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductListComponents\\InputBox.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductListComponents\\AutocompleteBox.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductListComponents\\FilterBox.jsx",["210"],"import React from 'react'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\n\r\nexport default function FilterBox({\r\n  headCells,\r\n  onChangeFilter,\r\n  InputWidth,\r\n  typeFilter,\r\n  filterSelected,\r\n}) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: InputWidth || 120,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      <Select\r\n        value={filterSelected}\r\n        onChange={(event) => {\r\n          onChangeFilter(event.target.value, typeFilter);\r\n        }}\r\n        id=\"grouped-select\"\r\n      >\r\n        {headCells.map((data) => {\r\n          return (\r\n            <MenuItem key={data.id} value={data.id}>\r\n              {data.label}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}","E:\\ivtr-management-demo2\\src\\Main\\Feature\\ProductComponents\\ProductListComponents\\LoadingProgress.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\ProductLive\\components\\EnhancedTableBody\\components\\DeleteDialog.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\ProductLive\\components\\EnhancedTableBody\\components\\EditDialog.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\MainLive\\MainLive.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\MainLive\\components\\LiveTableHeader.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\MainLive\\components\\LiveTableBody.jsx",["211"],"import { NavLink } from \"react-router-dom\";\r\nimport TableRow from \"@material-ui/core/TableROw\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { getComparator, stableSort } from \"../../utils/TableUtils\";\r\nimport { formatDate } from \"../../utils/FormatDate\";\r\n\r\nexport default function LiveTableBody(props) {\r\n  const { rows, order, orderBy, page, rowsPerPage, emptyRows } = props;\r\n\r\n  return (\r\n    <>\r\n      {stableSort(rows, getComparator(order, orderBy))\r\n        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n        .map((row, index) => {\r\n          const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n          return (\r\n            <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.name}>\r\n              <TableCell id={labelId} align=\"left\">\r\n                {row.increment}\r\n              </TableCell>\r\n              <TableCell align=\"left\">{row.name}</TableCell>\r\n              <TableCell align=\"left\">{row.description}</TableCell>\r\n              <TableCell align=\"right\">{row.contact}</TableCell>\r\n              <TableCell align=\"right\">{row.lead}</TableCell>\r\n              <TableCell align=\"right\">{row.order}</TableCell>\r\n              <TableCell align=\"right\">{row.createdon}</TableCell>\r\n              <TableCell align=\"left\">\r\n                <Chip\r\n                  label={row.status}\r\n                  clickable\r\n                  color={row.status === \"offline\" ? \"\" : \"primary\"}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n                <NavLink to=\"/livestream/product\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    to=\"/\"\r\n                  >\r\n                    จัดการ\r\n                  </Button>\r\n                </NavLink>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                  style={{ marginLeft: 10 }}\r\n                >\r\n                  ลบ\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          );\r\n        })}\r\n      {emptyRows > 0 && (\r\n        <TableRow style={{ height: 33 * emptyRows }}>\r\n          <TableCell colSpan={6} />\r\n        </TableRow>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\ProductLive\\components\\EnhancedTableToolbar\\components\\AddExistingProduct.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\ProductLive\\components\\EnhancedTableToolbar\\components\\ExistingProductTable.jsx",[],["212","213"],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\MainLive\\components\\LivePageTitle.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Components\\BreadCrumbs.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\utils\\FormatDate.js",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\MainLive\\components\\LiveTableTitle.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\CFLive\\CFPage.jsx",[],"E:\\ivtr-management-demo2\\src\\Main\\Feature\\LiveStreamComponents\\CFLive\\TotalCustomer.jsx",[],{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":4,"column":8,"nodeType":"220","messageId":"221","endLine":4,"endColumn":18},{"ruleId":"218","severity":1,"message":"222","line":40,"column":17,"nodeType":"220","messageId":"221","endLine":40,"endColumn":18},{"ruleId":"223","severity":1,"message":"224","line":434,"column":45,"nodeType":"225","messageId":"226","endLine":434,"endColumn":47},{"ruleId":"227","severity":1,"message":"228","line":493,"column":6,"nodeType":"229","endLine":493,"endColumn":8,"suggestions":"230"},{"ruleId":"218","severity":1,"message":"231","line":9,"column":8,"nodeType":"220","messageId":"221","endLine":9,"endColumn":12},{"ruleId":"218","severity":1,"message":"232","line":10,"column":8,"nodeType":"220","messageId":"221","endLine":10,"endColumn":12},{"ruleId":"218","severity":1,"message":"233","line":15,"column":8,"nodeType":"220","messageId":"221","endLine":15,"endColumn":16},{"ruleId":"218","severity":1,"message":"234","line":16,"column":8,"nodeType":"220","messageId":"221","endLine":16,"endColumn":23},{"ruleId":"218","severity":1,"message":"235","line":20,"column":10,"nodeType":"220","messageId":"221","endLine":20,"endColumn":20},{"ruleId":"218","severity":1,"message":"236","line":65,"column":9,"nodeType":"220","messageId":"221","endLine":65,"endColumn":26},{"ruleId":"218","severity":1,"message":"237","line":29,"column":7,"nodeType":"220","messageId":"221","endLine":29,"endColumn":17},{"ruleId":"218","severity":1,"message":"238","line":6,"column":8,"nodeType":"220","messageId":"221","endLine":6,"endColumn":22},{"ruleId":"218","severity":1,"message":"239","line":4,"column":8,"nodeType":"220","messageId":"221","endLine":4,"endColumn":21},{"ruleId":"218","severity":1,"message":"240","line":7,"column":10,"nodeType":"220","messageId":"221","endLine":7,"endColumn":20},{"ruleId":"214","replacedBy":"241"},{"ruleId":"216","replacedBy":"242"},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"no-unused-vars","'LiveStream' is defined but never used.","Identifier","unusedVar","'_' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'fetchProductData'. Either include it or remove the dependency array.","ArrayExpression",["245"],"'Grid' is defined but never used.","'List' is defined but never used.","'WorkIcon' is defined but never used.","'BeachAccessIcon' is defined but never used.","'FolderList' is defined but never used.","'handleExpandClick' is assigned a value but never used.","'formatDate' is assigned a value but never used.","'TableContainer' is defined but never used.","'ListSubheader' is defined but never used.","'formatDate' is defined but never used.",["243"],["244"],"no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},"Update the dependencies array to be: [fetchProductData]",{"range":"248","text":"249"},[14895,14897],"[fetchProductData]"]